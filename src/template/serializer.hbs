using System;
using System.IO;
using System.Text;

public class {{modelType}}PacketSerializer : IPacketSerializer<{{modelType}}> {
{{#if hasCustomTypes}}

{{#each schemas as |schema|}}
    private readonly IPacketSerializer<{{schema.pascalCaseName}}Dto> _{{schema.camelCaseName}}DtoSerializer;
{{/each}}

    public {{modelType}}PacketSerializer() {
    {{#each schemas as |schema|}}
        _{{schema.camelCaseName}}DtoSerializer = new {{schema.pascalCaseName}}DtoPacketSerializer();
    {{/each}}
    }
{{/if}}

    public void Serialize({{model.pascalCaseName}} {{model.camelCaseName}}, BinaryWriter writer) {
{{#if isPacket}}
        writer.Write(BitConverter.GetBytes({{model.pascalCaseName}}.Header));
{{/if}}
{{#each fields as |field|}}
    {{#if field.isNumeric}}
        {{> serializer-numeric field model=../model}}
    {{/if}}
    {{#if field.isVarchar}}
        {{> serializer-varchar field model=../model}}
    {{/if}}
    {{#if field.isChar}}
        {{> serializer-char field model=../model}}
    {{/if}}
    {{#if field.isObject}}
        {{> serializer-object field model=../model}}
    {{/if}}
    {{#if field.isArray}}
        {{> serializer-array field model=../model}}
    {{/if}}

{{/each}}
    }
}